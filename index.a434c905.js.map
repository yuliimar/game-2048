{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.state = initialState || this.getEmptyBoard();\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"getEmptyBoard\",\n            value: function getEmptyBoard() {\n                return Array(4).fill(null).map(function() {\n                    return Array(4).fill(0);\n                });\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                if (this.status === \"idle\") {\n                    this.status = \"playing\";\n                    this.addRandomTile();\n                    this.addRandomTile();\n                }\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.state = this.getEmptyBoard();\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = [];\n                this.state.forEach(function(row, y) {\n                    row.forEach(function(cell, x) {\n                        if (cell === 0) emptyCells.push({\n                            y: y,\n                            x: x\n                        });\n                    });\n                });\n                if (emptyCells.length > 0) {\n                    var _emptyCells_Math_floor = emptyCells[Math.floor(Math.random() * emptyCells.length)], y = _emptyCells_Math_floor.y, x = _emptyCells_Math_floor.x;\n                    this.state[y][x] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (this.status !== \"playing\") return false;\n                var moved = false;\n                var newState = this.state.map(function(row) {\n                    var nonZero = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var i = 0; i < nonZero.length - 1; i++)if (nonZero[i] === nonZero[i + 1]) {\n                        nonZero[i] *= 2;\n                        _this.score += nonZero[i];\n                        nonZero[i + 1] = 0;\n                    }\n                    nonZero = nonZero.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(nonZero.length < 4)nonZero.push(0);\n                    return nonZero;\n                });\n                var hasChanged = JSON.stringify(this.state) !== JSON.stringify(newState);\n                if (hasChanged) {\n                    this.state = newState;\n                    this.addRandomTile();\n                    moved = true;\n                }\n                this.checkGameStatus();\n                return moved;\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                if (this.status !== \"playing\") return false;\n                var moved = false;\n                var newState = this.state.map(function(row) {\n                    var nonZero = row.filter(function(cell) {\n                        return cell !== 0;\n                    }).reverse();\n                    for(var i = 0; i < nonZero.length - 1; i++)if (nonZero[i] === nonZero[i + 1]) {\n                        nonZero[i] *= 2;\n                        _this.score += nonZero[i];\n                        nonZero[i + 1] = 0;\n                    }\n                    nonZero = nonZero.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(nonZero.length < 4)nonZero.push(0);\n                    return nonZero.reverse();\n                });\n                var hasChanged = JSON.stringify(this.state) !== JSON.stringify(newState);\n                if (hasChanged) {\n                    this.state = newState;\n                    this.addRandomTile();\n                    moved = true;\n                }\n                this.checkGameStatus();\n                return moved;\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this, _loop = function(col) {\n                    var column = [];\n                    for(var row = 0; row < 4; row++)if (_this.state[row][col] !== 0) column.push(_this.state[row][col]);\n                    for(var i = 0; i < column.length - 1; i++)if (column[i] === column[i + 1]) {\n                        column[i] *= 2;\n                        _this.score += column[i];\n                        column[i + 1] = 0;\n                    }\n                    column = column.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(column.length < 4)column.push(0);\n                    for(var row1 = 0; row1 < 4; row1++)newState[row1][col] = column[row1];\n                };\n                if (this.status !== \"playing\") return false;\n                var moved = false;\n                var newState = this.getEmptyBoard();\n                for(var col = 0; col < 4; col++)_loop(col);\n                var hasChanged = JSON.stringify(this.state) !== JSON.stringify(newState);\n                if (hasChanged) {\n                    this.state = newState;\n                    this.addRandomTile();\n                    moved = true;\n                }\n                this.checkGameStatus();\n                return moved;\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this, _loop = function(col) {\n                    var column = [];\n                    for(var row = 3; row >= 0; row--)if (_this.state[row][col] !== 0) column.push(_this.state[row][col]);\n                    for(var i = 0; i < column.length - 1; i++)if (column[i] === column[i + 1]) {\n                        column[i] *= 2;\n                        _this.score += column[i];\n                        column[i + 1] = 0;\n                    }\n                    column = column.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(column.length < 4)column.push(0);\n                    for(var row1 = 0; row1 < 4; row1++)newState[3 - row1][col] = column[row1];\n                };\n                if (this.status !== \"playing\") return false;\n                var moved = false;\n                var newState = this.getEmptyBoard();\n                for(var col = 0; col < 4; col++)_loop(col);\n                var hasChanged = JSON.stringify(this.state) !== JSON.stringify(newState);\n                if (hasChanged) {\n                    this.state = newState;\n                    this.addRandomTile();\n                    moved = true;\n                }\n                this.checkGameStatus();\n                return moved;\n            }\n        },\n        {\n            key: \"checkGameStatus\",\n            value: function checkGameStatus() {\n                if (this.state.some(function(row) {\n                    return row.includes(2048);\n                })) {\n                    this.status = \"win\";\n                    return;\n                }\n                if (!this.hasAvailableMoves()) this.status = \"lose\";\n            }\n        },\n        {\n            key: \"hasAvailableMoves\",\n            value: function hasAvailableMoves() {\n                if (this.state.some(function(row) {\n                    return row.includes(0);\n                })) return true;\n                for(var y = 0; y < 4; y++)for(var x = 0; x < 3; x++){\n                    if (this.state[y][x] === this.state[y][x + 1]) return true;\n                }\n                for(var x1 = 0; x1 < 4; x1++)for(var y1 = 0; y1 < 3; y1++){\n                    if (this.state[y1][x1] === this.state[y1 + 1][x1]) return true;\n                }\n                return false;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$game = new (0, (/*@__PURE__*/$parcel$interopDefault($3d28d7f1aac198f5$exports)))();\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$fieldCells = document.querySelectorAll(\".field-cell\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$previousState = $197cd56b15c33885$var$game.getState();\nfunction $197cd56b15c33885$var$updateUI() {\n    var newState = $197cd56b15c33885$var$game.getState();\n    newState.forEach(function(row, y) {\n        row.forEach(function(value, x) {\n            var cell = $197cd56b15c33885$var$fieldCells[y * 4 + x];\n            var prevValue = $197cd56b15c33885$var$previousState[y][x];\n            cell.textContent = value || \"\";\n            cell.className = \"field-cell\".concat(value ? \" field-cell--\".concat(value) : \"\");\n            if (value !== prevValue) {\n                cell.classList.add(\"appear\");\n                setTimeout(function() {\n                    cell.classList.remove(\"appear\");\n                }, 150);\n            }\n        });\n    });\n    $197cd56b15c33885$var$previousState = newState.map(function(row) {\n        return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n    });\n    $197cd56b15c33885$var$gameScore.textContent = $197cd56b15c33885$var$game.getScore();\n    $197cd56b15c33885$var$messageStart.classList.toggle(\"hidden\", $197cd56b15c33885$var$game.getStatus() !== \"idle\");\n    $197cd56b15c33885$var$messageWin.classList.toggle(\"hidden\", $197cd56b15c33885$var$game.getStatus() !== \"win\");\n    $197cd56b15c33885$var$messageLose.classList.toggle(\"hidden\", $197cd56b15c33885$var$game.getStatus() !== \"lose\");\n    $197cd56b15c33885$var$startButton.textContent = $197cd56b15c33885$var$game.getStatus() === \"idle\" ? \"Start\" : \"Restart\";\n    $197cd56b15c33885$var$startButton.className = \"button \".concat($197cd56b15c33885$var$game.getStatus() === \"idle\" ? \"start\" : \"restart\");\n}\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$game.getStatus() === \"idle\") $197cd56b15c33885$var$game.start();\n    else $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$updateUI();\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    switch(e.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            return;\n    }\n    $197cd56b15c33885$var$updateUI();\n});\n$197cd56b15c33885$var$updateUI();\n\n})();\n//# sourceMappingURL=index.a434c905.js.map\n","'use strict';\nimport Game from '../modules/Game.class.js';\n\nconst game = new Game();\nconst startButton = document.querySelector('.button.start');\nconst gameScore = document.querySelector('.game-score');\nconst fieldCells = document.querySelectorAll('.field-cell');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nlet previousState = game.getState();\n\nfunction updateUI() {\n  const newState = game.getState();\n\n  newState.forEach((row, y) => {\n    row.forEach((value, x) => {\n      const cell = fieldCells[y * 4 + x];\n      const prevValue = previousState[y][x];\n\n      cell.textContent = value || '';\n      cell.className = `field-cell${value ? ` field-cell--${value}` : ''}`;\n\n      if (value !== prevValue) {\n        cell.classList.add('appear');\n\n        setTimeout(() => {\n          cell.classList.remove('appear');\n        }, 150);\n      }\n    });\n  });\n\n  previousState = newState.map((row) => [...row]);\n\n  gameScore.textContent = game.getScore();\n  messageStart.classList.toggle('hidden', game.getStatus() !== 'idle');\n  messageWin.classList.toggle('hidden', game.getStatus() !== 'win');\n  messageLose.classList.toggle('hidden', game.getStatus() !== 'lose');\n  startButton.textContent = game.getStatus() === 'idle' ? 'Start' : 'Restart';\n  startButton.className = `button ${game.getStatus() === 'idle' ? 'start' : 'restart'}`;\n}\n\nstartButton.addEventListener('click', () => {\n  if (game.getStatus() === 'idle') {\n    game.start();\n  } else {\n    game.restart();\n  }\n  updateUI();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    default:\n      return;\n  }\n  updateUI();\n});\n\nupdateUI();\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","'use strict';\nclass Game {\n  constructor(initialState) {\n    this.state = initialState || this.getEmptyBoard();\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  getEmptyBoard() {\n    return Array(4)\n      .fill(null)\n      .map(() => Array(4).fill(0));\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state.map((row) => [...row]);\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    if (this.status === 'idle') {\n      this.status = 'playing';\n      this.addRandomTile();\n      this.addRandomTile();\n    }\n  }\n\n  restart() {\n    this.state = this.getEmptyBoard();\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    this.state.forEach((row, y) => {\n      row.forEach((cell, x) => {\n        if (cell === 0) {\n          emptyCells.push({ y, x });\n        }\n      });\n    });\n\n    if (emptyCells.length > 0) {\n      const { y, x } =\n        emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      this.state[y][x] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return false;\n    }\n\n    let moved = false;\n\n    const newState = this.state.map((row) => {\n      let nonZero = row.filter((cell) => cell !== 0);\n\n      for (let i = 0; i < nonZero.length - 1; i++) {\n        if (nonZero[i] === nonZero[i + 1]) {\n          nonZero[i] *= 2;\n          this.score += nonZero[i];\n          nonZero[i + 1] = 0;\n        }\n      }\n\n      nonZero = nonZero.filter((cell) => cell !== 0);\n\n      while (nonZero.length < 4) {\n        nonZero.push(0);\n      }\n\n      return nonZero;\n    });\n\n    const hasChanged = JSON.stringify(this.state) !== JSON.stringify(newState);\n\n    if (hasChanged) {\n      this.state = newState;\n      this.addRandomTile();\n      moved = true;\n    }\n\n    this.checkGameStatus();\n\n    return moved;\n  }\n\n  moveRight() {\n    if (this.status !== 'playing') {\n      return false;\n    }\n\n    let moved = false;\n\n    const newState = this.state.map((row) => {\n      let nonZero = row.filter((cell) => cell !== 0).reverse();\n\n      for (let i = 0; i < nonZero.length - 1; i++) {\n        if (nonZero[i] === nonZero[i + 1]) {\n          nonZero[i] *= 2;\n          this.score += nonZero[i];\n          nonZero[i + 1] = 0;\n        }\n      }\n\n      nonZero = nonZero.filter((cell) => cell !== 0);\n\n      while (nonZero.length < 4) {\n        nonZero.push(0);\n      }\n\n      return nonZero.reverse();\n    });\n\n    const hasChanged = JSON.stringify(this.state) !== JSON.stringify(newState);\n\n    if (hasChanged) {\n      this.state = newState;\n      this.addRandomTile();\n      moved = true;\n    }\n\n    this.checkGameStatus();\n\n    return moved;\n  }\n\n  moveUp() {\n    if (this.status !== 'playing') {\n      return false;\n    }\n\n    let moved = false;\n    const newState = this.getEmptyBoard();\n\n    for (let col = 0; col < 4; col++) {\n      let column = [];\n\n      for (let row = 0; row < 4; row++) {\n        if (this.state[row][col] !== 0) {\n          column.push(this.state[row][col]);\n        }\n      }\n\n      for (let i = 0; i < column.length - 1; i++) {\n        if (column[i] === column[i + 1]) {\n          column[i] *= 2;\n          this.score += column[i];\n          column[i + 1] = 0;\n        }\n      }\n\n      column = column.filter((cell) => cell !== 0);\n\n      while (column.length < 4) {\n        column.push(0);\n      }\n\n      for (let row = 0; row < 4; row++) {\n        newState[row][col] = column[row];\n      }\n    }\n\n    const hasChanged = JSON.stringify(this.state) !== JSON.stringify(newState);\n\n    if (hasChanged) {\n      this.state = newState;\n      this.addRandomTile();\n      moved = true;\n    }\n\n    this.checkGameStatus();\n\n    return moved;\n  }\n\n  moveDown() {\n    if (this.status !== 'playing') {\n      return false;\n    }\n\n    let moved = false;\n    const newState = this.getEmptyBoard();\n\n    for (let col = 0; col < 4; col++) {\n      let column = [];\n\n      for (let row = 3; row >= 0; row--) {\n        if (this.state[row][col] !== 0) {\n          column.push(this.state[row][col]);\n        }\n      }\n\n      for (let i = 0; i < column.length - 1; i++) {\n        if (column[i] === column[i + 1]) {\n          column[i] *= 2;\n          this.score += column[i];\n          column[i + 1] = 0;\n        }\n      }\n\n      column = column.filter((cell) => cell !== 0);\n\n      while (column.length < 4) {\n        column.push(0);\n      }\n\n      for (let row = 0; row < 4; row++) {\n        newState[3 - row][col] = column[row];\n      }\n    }\n\n    const hasChanged = JSON.stringify(this.state) !== JSON.stringify(newState);\n\n    if (hasChanged) {\n      this.state = newState;\n      this.addRandomTile();\n      moved = true;\n    }\n\n    this.checkGameStatus();\n\n    return moved;\n  }\n\n  checkGameStatus() {\n    if (this.state.some((row) => row.includes(2048))) {\n      this.status = 'win';\n\n      return;\n    }\n\n    if (!this.hasAvailableMoves()) {\n      this.status = 'lose';\n    }\n  }\n\n  hasAvailableMoves() {\n    if (this.state.some((row) => row.includes(0))) {\n      return true;\n    }\n\n    for (let y = 0; y < 4; y++) {\n      for (let x = 0; x < 3; x++) {\n        if (this.state[y][x] === this.state[y][x + 1]) {\n          return true;\n        }\n      }\n    }\n\n    for (let x = 0; x < 4; x++) {\n      for (let y = 0; y < 3; y++) {\n        if (this.state[y][x] === this.state[y + 1][x]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","a","$3d28d7f1aac198f5$exports","$197cd56b15c33885$var$game","protoProps","Game","initialState","instance","Constructor","state","getEmptyBoard","score","status","key","value","fill","map","row","addRandomTile","emptyCells","forEach","y","cell","x","push","_emptyCells_Math_floor","Math","floor","random","_this","moved","newState","nonZero","filter","JSON","stringify","checkGameStatus","reverse","col","_loop","column","row1","some","includes","hasAvailableMoves","x1","y1","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","__esModule","default","$197cd56b15c33885$var$startButton","document","querySelector","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$fieldCells","querySelectorAll","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$previousState","getState","$197cd56b15c33885$var$updateUI","prevValue","textContent","className","concat","classList","add","setTimeout","remove","getScore","toggle","getStatus","addEventListener","start","restart","e","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.a434c905.js.map"}